# GF'd Dating App - Production Environment
version: '3.8'

services:
  # Frontend (React + Vite) - Production Build
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.prod
    environment:
      - NODE_ENV=production
      - VITE_TEST_MODE=false
      - VITE_API_URL=https://api.gfd.com
      - VITE_SUPABASE_URL=${SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    networks:
      - gfd-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  # Backend (Fastify + GraphQL) - Production
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
    networks:
      - gfd-network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - gfd-network
    deploy:
      restart_policy:
        condition: on-failure

networks:
  gfd-network:
    driver: overlay
    attachable: true